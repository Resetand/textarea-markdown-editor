{"ast":null,"code":"/** @license React v16.14.0\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function () {\n    'use strict';\n\n    var React = require('react'); // ATTENTION\n    // When adding new symbols to this file,\n    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n    // nor polyfill, then a plain number is used for performance.\n\n\n    var REACT_ELEMENT_TYPE = 0xeac7;\n    var REACT_PORTAL_TYPE = 0xeaca;\n    exports.Fragment = 0xeacb;\n    var REACT_STRICT_MODE_TYPE = 0xeacc;\n    var REACT_PROFILER_TYPE = 0xead2;\n    var REACT_PROVIDER_TYPE = 0xeacd;\n    var REACT_CONTEXT_TYPE = 0xeace;\n    var REACT_FORWARD_REF_TYPE = 0xead0;\n    var REACT_SUSPENSE_TYPE = 0xead1;\n    var REACT_SUSPENSE_LIST_TYPE = 0xead8;\n    var REACT_MEMO_TYPE = 0xead3;\n    var REACT_LAZY_TYPE = 0xead4;\n    var REACT_BLOCK_TYPE = 0xead9;\n    var REACT_SERVER_BLOCK_TYPE = 0xeada;\n    var REACT_FUNDAMENTAL_TYPE = 0xead5;\n    var REACT_SCOPE_TYPE = 0xead7;\n    var REACT_OPAQUE_ID_TYPE = 0xeae0;\n    var REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;\n    var REACT_OFFSCREEN_TYPE = 0xeae2;\n    var REACT_LEGACY_HIDDEN_TYPE = 0xeae3;\n\n    if (typeof Symbol === 'function' && Symbol.for) {\n      var symbolFor = Symbol.for;\n      REACT_ELEMENT_TYPE = symbolFor('react.element');\n      REACT_PORTAL_TYPE = symbolFor('react.portal');\n      exports.Fragment = symbolFor('react.fragment');\n      REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');\n      REACT_PROFILER_TYPE = symbolFor('react.profiler');\n      REACT_PROVIDER_TYPE = symbolFor('react.provider');\n      REACT_CONTEXT_TYPE = symbolFor('react.context');\n      REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');\n      REACT_SUSPENSE_TYPE = symbolFor('react.suspense');\n      REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');\n      REACT_MEMO_TYPE = symbolFor('react.memo');\n      REACT_LAZY_TYPE = symbolFor('react.lazy');\n      REACT_BLOCK_TYPE = symbolFor('react.block');\n      REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');\n      REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');\n      REACT_SCOPE_TYPE = symbolFor('react.scope');\n      REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');\n      REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');\n      REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');\n      REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');\n    }\n\n    var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n    var FAUX_ITERATOR_SYMBOL = '@@iterator';\n\n    function getIteratorFn(maybeIterable) {\n      if (maybeIterable === null || typeof maybeIterable !== 'object') {\n        return null;\n      }\n\n      var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n      if (typeof maybeIterator === 'function') {\n        return maybeIterator;\n      }\n\n      return null;\n    }\n\n    var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\n    function error(format) {\n      {\n        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n\n        printWarning('error', format, args);\n      }\n    }\n\n    function printWarning(level, format, args) {\n      // When changing this logic, you might want to also\n      // update consoleWithStackDev.www.js as well.\n      {\n        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n        var stack = '';\n\n        if (currentlyValidatingElement) {\n          var name = getComponentName(currentlyValidatingElement.type);\n          var owner = currentlyValidatingElement._owner;\n          stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner.type));\n        }\n\n        stack += ReactDebugCurrentFrame.getStackAddendum();\n\n        if (stack !== '') {\n          format += '%s';\n          args = args.concat([stack]);\n        }\n\n        var argsWithFormat = args.map(function (item) {\n          return '' + item;\n        }); // Careful: RN currently depends on this prefix\n\n        argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n        // breaks IE9: https://github.com/facebook/react/issues/13610\n        // eslint-disable-next-line react-internal/no-production-logging\n\n        Function.prototype.apply.call(console[level], console, argsWithFormat);\n      }\n    } // Filter certain DOM attributes (e.g. src, href) if their values are empty strings.\n\n\n    var enableScopeAPI = false; // Experimental Create Event Handle API.\n\n    function isValidElementType(type) {\n      if (typeof type === 'string' || typeof type === 'function') {\n        return true;\n      } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n      if (type === exports.Fragment || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI) {\n        return true;\n      }\n\n      if (typeof type === 'object' && type !== null) {\n        if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    var BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\n\n    function describeComponentFrame(name, source, ownerName) {\n      var sourceInfo = '';\n\n      if (source) {\n        var path = source.fileName;\n        var fileName = path.replace(BEFORE_SLASH_RE, '');\n        {\n          // In DEV, include code for a common special case:\n          // prefer \"folder/index.js\" instead of just \"index.js\".\n          if (/^index\\./.test(fileName)) {\n            var match = path.match(BEFORE_SLASH_RE);\n\n            if (match) {\n              var pathBeforeSlash = match[1];\n\n              if (pathBeforeSlash) {\n                var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\n                fileName = folderName + '/' + fileName;\n              }\n            }\n          }\n        }\n        sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\n      } else if (ownerName) {\n        sourceInfo = ' (created by ' + ownerName + ')';\n      }\n\n      return '\\n    in ' + (name || 'Unknown') + sourceInfo;\n    }\n\n    var Resolved = 1;\n\n    function refineResolvedLazyComponent(lazyComponent) {\n      return lazyComponent._status === Resolved ? lazyComponent._result : null;\n    }\n\n    function getWrappedName(outerType, innerType, wrapperName) {\n      var functionName = innerType.displayName || innerType.name || '';\n      return outerType.displayName || (functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName);\n    }\n\n    function getComponentName(type) {\n      if (type == null) {\n        // Host root, text node or just invalid type.\n        return null;\n      }\n\n      {\n        if (typeof type.tag === 'number') {\n          error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');\n        }\n      }\n\n      if (typeof type === 'function') {\n        return type.displayName || type.name || null;\n      }\n\n      if (typeof type === 'string') {\n        return type;\n      }\n\n      switch (type) {\n        case exports.Fragment:\n          return 'Fragment';\n\n        case REACT_PORTAL_TYPE:\n          return 'Portal';\n\n        case REACT_PROFILER_TYPE:\n          return \"Profiler\";\n\n        case REACT_STRICT_MODE_TYPE:\n          return 'StrictMode';\n\n        case REACT_SUSPENSE_TYPE:\n          return 'Suspense';\n\n        case REACT_SUSPENSE_LIST_TYPE:\n          return 'SuspenseList';\n      }\n\n      if (typeof type === 'object') {\n        switch (type.$$typeof) {\n          case REACT_CONTEXT_TYPE:\n            return 'Context.Consumer';\n\n          case REACT_PROVIDER_TYPE:\n            return 'Context.Provider';\n\n          case REACT_FORWARD_REF_TYPE:\n            return getWrappedName(type, type.render, 'ForwardRef');\n\n          case REACT_MEMO_TYPE:\n            return getComponentName(type.type);\n\n          case REACT_BLOCK_TYPE:\n            return getComponentName(type.render);\n\n          case REACT_LAZY_TYPE:\n            {\n              var thenable = type;\n              var resolvedThenable = refineResolvedLazyComponent(thenable);\n\n              if (resolvedThenable) {\n                return getComponentName(resolvedThenable);\n              }\n\n              break;\n            }\n        }\n      }\n\n      return null;\n    }\n\n    var loggedTypeFailures = {};\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var currentlyValidatingElement = null;\n\n    function setCurrentlyValidatingElement(element) {\n      currentlyValidatingElement = element;\n    }\n\n    function checkPropTypes(typeSpecs, values, location, componentName, element) {\n      {\n        // $FlowFixMe This is okay but Flow doesn't know it.\n        var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n        for (var typeSpecName in typeSpecs) {\n          if (has(typeSpecs, typeSpecName)) {\n            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n            // fail the render phase where it didn't fail before. So we log it.\n            // After these have been cleaned up, we'll let them throw.\n\n            try {\n              // This is intentionally an invariant that gets caught. It's the same\n              // behavior as without this statement except with a better message.\n              if (typeof typeSpecs[typeSpecName] !== 'function') {\n                var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n                err.name = 'Invariant Violation';\n                throw err;\n              }\n\n              error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n            } catch (ex) {\n              error$1 = ex;\n            }\n\n            if (error$1 && !(error$1 instanceof Error)) {\n              setCurrentlyValidatingElement(element);\n              error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n              setCurrentlyValidatingElement(null);\n            }\n\n            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n              // Only monitor this failure once because there tends to be a lot of the\n              // same error.\n              loggedTypeFailures[error$1.message] = true;\n              setCurrentlyValidatingElement(element);\n              error('Failed %s type: %s', location, error$1.message);\n              setCurrentlyValidatingElement(null);\n            }\n          }\n        }\n      }\n    }\n\n    var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    var RESERVED_PROPS = {\n      key: true,\n      ref: true,\n      __self: true,\n      __source: true\n    };\n    var specialPropKeyWarningShown;\n    var specialPropRefWarningShown;\n    var didWarnAboutStringRefs;\n    {\n      didWarnAboutStringRefs = {};\n    }\n\n    function hasValidRef(config) {\n      {\n        if (hasOwnProperty.call(config, 'ref')) {\n          var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n          if (getter && getter.isReactWarning) {\n            return false;\n          }\n        }\n      }\n      return config.ref !== undefined;\n    }\n\n    function hasValidKey(config) {\n      {\n        if (hasOwnProperty.call(config, 'key')) {\n          var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n          if (getter && getter.isReactWarning) {\n            return false;\n          }\n        }\n      }\n      return config.key !== undefined;\n    }\n\n    function warnIfStringRefCannotBeAutoConverted(config, self) {\n      {\n        if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n          var componentName = getComponentName(ReactCurrentOwner.current.type);\n\n          if (!didWarnAboutStringRefs[componentName]) {\n            error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentName(ReactCurrentOwner.current.type), config.ref);\n            didWarnAboutStringRefs[componentName] = true;\n          }\n        }\n      }\n    }\n\n    function defineKeyPropWarningGetter(props, displayName) {\n      {\n        var warnAboutAccessingKey = function () {\n          if (!specialPropKeyWarningShown) {\n            specialPropKeyWarningShown = true;\n            error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n          }\n        };\n\n        warnAboutAccessingKey.isReactWarning = true;\n        Object.defineProperty(props, 'key', {\n          get: warnAboutAccessingKey,\n          configurable: true\n        });\n      }\n    }\n\n    function defineRefPropWarningGetter(props, displayName) {\n      {\n        var warnAboutAccessingRef = function () {\n          if (!specialPropRefWarningShown) {\n            specialPropRefWarningShown = true;\n            error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n          }\n        };\n\n        warnAboutAccessingRef.isReactWarning = true;\n        Object.defineProperty(props, 'ref', {\n          get: warnAboutAccessingRef,\n          configurable: true\n        });\n      }\n    }\n    /**\n     * Factory method to create a new React element. This no longer adheres to\n     * the class pattern, so do not use new to call it. Also, instanceof check\n     * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n     * if something is a React Element.\n     *\n     * @param {*} type\n     * @param {*} props\n     * @param {*} key\n     * @param {string|object} ref\n     * @param {*} owner\n     * @param {*} self A *temporary* helper to detect places where `this` is\n     * different from the `owner` when React.createElement is called, so that we\n     * can warn. We want to get rid of owner and replace string `ref`s with arrow\n     * functions, and as long as `this` and owner are the same, there will be no\n     * change in behavior.\n     * @param {*} source An annotation object (added by a transpiler or otherwise)\n     * indicating filename, line number, and/or other information.\n     * @internal\n     */\n\n\n    var ReactElement = function (type, key, ref, self, source, owner, props) {\n      var element = {\n        // This tag allows us to uniquely identify this as a React Element\n        $$typeof: REACT_ELEMENT_TYPE,\n        // Built-in properties that belong on the element\n        type: type,\n        key: key,\n        ref: ref,\n        props: props,\n        // Record the component responsible for creating this element.\n        _owner: owner\n      };\n      {\n        // The validation flag is currently mutative. We put it on\n        // an external backing store so that we can freeze the whole object.\n        // This can be replaced with a WeakMap once they are implemented in\n        // commonly used development environments.\n        element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n        // the validation flag non-enumerable (where possible, which should\n        // include every environment we run tests in), so the test framework\n        // ignores it.\n\n        Object.defineProperty(element._store, 'validated', {\n          configurable: false,\n          enumerable: false,\n          writable: true,\n          value: false\n        }); // self and source are DEV only properties.\n\n        Object.defineProperty(element, '_self', {\n          configurable: false,\n          enumerable: false,\n          writable: false,\n          value: self\n        }); // Two elements created in two different places should be considered\n        // equal for testing purposes and therefore we hide it from enumeration.\n\n        Object.defineProperty(element, '_source', {\n          configurable: false,\n          enumerable: false,\n          writable: false,\n          value: source\n        });\n\n        if (Object.freeze) {\n          Object.freeze(element.props);\n          Object.freeze(element);\n        }\n      }\n      return element;\n    };\n    /**\n     * https://github.com/reactjs/rfcs/pull/107\n     * @param {*} type\n     * @param {object} props\n     * @param {string} key\n     */\n\n\n    function jsxDEV(type, config, maybeKey, source, self) {\n      {\n        var propName; // Reserved names are extracted\n\n        var props = {};\n        var key = null;\n        var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n        // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n        // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n        // but as an intermediary step, we will use jsxDEV for everything except\n        // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n        // key is explicitly declared to be undefined or not.\n\n        if (maybeKey !== undefined) {\n          key = '' + maybeKey;\n        }\n\n        if (hasValidKey(config)) {\n          key = '' + config.key;\n        }\n\n        if (hasValidRef(config)) {\n          ref = config.ref;\n          warnIfStringRefCannotBeAutoConverted(config, self);\n        } // Remaining properties are added to a new props object\n\n\n        for (propName in config) {\n          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n            props[propName] = config[propName];\n          }\n        } // Resolve default props\n\n\n        if (type && type.defaultProps) {\n          var defaultProps = type.defaultProps;\n\n          for (propName in defaultProps) {\n            if (props[propName] === undefined) {\n              props[propName] = defaultProps[propName];\n            }\n          }\n        }\n\n        if (key || ref) {\n          var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n          if (key) {\n            defineKeyPropWarningGetter(props, displayName);\n          }\n\n          if (ref) {\n            defineRefPropWarningGetter(props, displayName);\n          }\n        }\n\n        return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n      }\n    }\n\n    var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\n    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\n    function setCurrentlyValidatingElement$1(element) {\n      currentlyValidatingElement = element;\n    }\n\n    var propTypesMisspellWarningShown;\n    {\n      propTypesMisspellWarningShown = false;\n    }\n    /**\n     * Verifies the object is a ReactElement.\n     * See https://reactjs.org/docs/react-api.html#isvalidelement\n     * @param {?object} object\n     * @return {boolean} True if `object` is a ReactElement.\n     * @final\n     */\n\n    function isValidElement(object) {\n      {\n        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n      }\n    }\n\n    function getDeclarationErrorAddendum() {\n      {\n        if (ReactCurrentOwner$1.current) {\n          var name = getComponentName(ReactCurrentOwner$1.current.type);\n\n          if (name) {\n            return '\\n\\nCheck the render method of `' + name + '`.';\n          }\n        }\n\n        return '';\n      }\n    }\n\n    function getSourceInfoErrorAddendum(source) {\n      {\n        if (source !== undefined) {\n          var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n          var lineNumber = source.lineNumber;\n          return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n        }\n\n        return '';\n      }\n    }\n    /**\n     * Warn if there's no key explicitly set on dynamic arrays of children or\n     * object keys are not valid. This allows us to keep track of children between\n     * updates.\n     */\n\n\n    var ownerHasKeyUseWarning = {};\n\n    function getCurrentComponentErrorInfo(parentType) {\n      {\n        var info = getDeclarationErrorAddendum();\n\n        if (!info) {\n          var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n          if (parentName) {\n            info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n          }\n        }\n\n        return info;\n      }\n    }\n    /**\n     * Warn if the element doesn't have an explicit key assigned to it.\n     * This element is in an array. The array could grow and shrink or be\n     * reordered. All children that haven't already been validated are required to\n     * have a \"key\" property assigned to it. Error statuses are cached so a warning\n     * will only be shown once.\n     *\n     * @internal\n     * @param {ReactElement} element Element that requires a key.\n     * @param {*} parentType element's parent's type.\n     */\n\n\n    function validateExplicitKey(element, parentType) {\n      {\n        if (!element._store || element._store.validated || element.key != null) {\n          return;\n        }\n\n        element._store.validated = true;\n        var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n        if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n          return;\n        }\n\n        ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n        // property, it may be the creator of the child that's responsible for\n        // assigning it a key.\n\n        var childOwner = '';\n\n        if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n          // Give the component that originally created this child.\n          childOwner = \" It was passed a child from \" + getComponentName(element._owner.type) + \".\";\n        }\n\n        setCurrentlyValidatingElement$1(element);\n        error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n        setCurrentlyValidatingElement$1(null);\n      }\n    }\n    /**\n     * Ensure that every element either is passed in a static location, in an\n     * array with an explicit keys property defined, or in an object literal\n     * with valid key property.\n     *\n     * @internal\n     * @param {ReactNode} node Statically passed child of any type.\n     * @param {*} parentType node's parent's type.\n     */\n\n\n    function validateChildKeys(node, parentType) {\n      {\n        if (typeof node !== 'object') {\n          return;\n        }\n\n        if (Array.isArray(node)) {\n          for (var i = 0; i < node.length; i++) {\n            var child = node[i];\n\n            if (isValidElement(child)) {\n              validateExplicitKey(child, parentType);\n            }\n          }\n        } else if (isValidElement(node)) {\n          // This element was passed in a valid location.\n          if (node._store) {\n            node._store.validated = true;\n          }\n        } else if (node) {\n          var iteratorFn = getIteratorFn(node);\n\n          if (typeof iteratorFn === 'function') {\n            // Entry iterators used to provide implicit keys,\n            // but now we print a separate warning for them later.\n            if (iteratorFn !== node.entries) {\n              var iterator = iteratorFn.call(node);\n              var step;\n\n              while (!(step = iterator.next()).done) {\n                if (isValidElement(step.value)) {\n                  validateExplicitKey(step.value, parentType);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Given an element, validate that its props follow the propTypes definition,\n     * provided by the type.\n     *\n     * @param {ReactElement} element\n     */\n\n\n    function validatePropTypes(element) {\n      {\n        var type = element.type;\n\n        if (type === null || type === undefined || typeof type === 'string') {\n          return;\n        }\n\n        var propTypes;\n\n        if (typeof type === 'function') {\n          propTypes = type.propTypes;\n        } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n        // Inner props are checked in the reconciler.\n        type.$$typeof === REACT_MEMO_TYPE)) {\n          propTypes = type.propTypes;\n        } else {\n          return;\n        }\n\n        if (propTypes) {\n          // Intentionally inside to avoid triggering lazy initializers:\n          var name = getComponentName(type);\n          checkPropTypes(propTypes, element.props, 'prop', name, element);\n        } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n          propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n          var _name = getComponentName(type);\n\n          error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n        }\n\n        if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n          error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n        }\n      }\n    }\n    /**\n     * Given a fragment, validate that it can only be provided with fragment props\n     * @param {ReactElement} fragment\n     */\n\n\n    function validateFragmentProps(fragment) {\n      {\n        var keys = Object.keys(fragment.props);\n\n        for (var i = 0; i < keys.length; i++) {\n          var key = keys[i];\n\n          if (key !== 'children' && key !== 'key') {\n            setCurrentlyValidatingElement$1(fragment);\n            error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n            setCurrentlyValidatingElement$1(null);\n            break;\n          }\n        }\n\n        if (fragment.ref !== null) {\n          setCurrentlyValidatingElement$1(fragment);\n          error('Invalid attribute `ref` supplied to `React.Fragment`.');\n          setCurrentlyValidatingElement$1(null);\n        }\n      }\n    }\n\n    function jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n      {\n        var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n        // succeed and there will likely be errors in render.\n\n        if (!validType) {\n          var info = '';\n\n          if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n            info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n          }\n\n          var sourceInfo = getSourceInfoErrorAddendum(source);\n\n          if (sourceInfo) {\n            info += sourceInfo;\n          } else {\n            info += getDeclarationErrorAddendum();\n          }\n\n          var typeString;\n\n          if (type === null) {\n            typeString = 'null';\n          } else if (Array.isArray(type)) {\n            typeString = 'array';\n          } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n            typeString = \"<\" + (getComponentName(type.type) || 'Unknown') + \" />\";\n            info = ' Did you accidentally export a JSX literal instead of a component?';\n          } else {\n            typeString = typeof type;\n          }\n\n          error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n        }\n\n        var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n        // TODO: Drop this when these are no longer allowed as the type argument.\n\n        if (element == null) {\n          return element;\n        } // Skip key warning if the type isn't valid since our key validation logic\n        // doesn't expect a non-string/function type and can throw confusing errors.\n        // We don't want exception behavior to differ between dev and prod.\n        // (Rendering will throw with a helpful message and as soon as the type is\n        // fixed, the key warnings will appear.)\n\n\n        if (validType) {\n          var children = props.children;\n\n          if (children !== undefined) {\n            if (isStaticChildren) {\n              if (Array.isArray(children)) {\n                for (var i = 0; i < children.length; i++) {\n                  validateChildKeys(children[i], type);\n                }\n\n                if (Object.freeze) {\n                  Object.freeze(children);\n                }\n              } else {\n                error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n              }\n            } else {\n              validateChildKeys(children, type);\n            }\n          }\n        }\n\n        if (type === exports.Fragment) {\n          validateFragmentProps(element);\n        } else {\n          validatePropTypes(element);\n        }\n\n        return element;\n      }\n    } // These two functions exist to still get child warnings in dev\n\n\n    var jsxDEV$1 = jsxWithValidation;\n    exports.jsxDEV = jsxDEV$1;\n  })();\n}","map":{"version":3,"sources":["/Users/kamachekhin/code/markdown-textarea/sandbox/node_modules/react/cjs/react-jsx-dev-runtime.development.js"],"names":["process","env","NODE_ENV","React","require","REACT_ELEMENT_TYPE","REACT_PORTAL_TYPE","exports","Fragment","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_BLOCK_TYPE","REACT_SERVER_BLOCK_TYPE","REACT_FUNDAMENTAL_TYPE","REACT_SCOPE_TYPE","REACT_OPAQUE_ID_TYPE","REACT_DEBUG_TRACING_MODE_TYPE","REACT_OFFSCREEN_TYPE","REACT_LEGACY_HIDDEN_TYPE","Symbol","for","symbolFor","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","ReactSharedInternals","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","error","format","_len2","arguments","length","args","Array","_key2","printWarning","level","ReactDebugCurrentFrame","stack","currentlyValidatingElement","name","getComponentName","type","owner","_owner","describeComponentFrame","_source","getStackAddendum","concat","argsWithFormat","map","item","unshift","Function","prototype","apply","call","console","enableScopeAPI","isValidElementType","$$typeof","BEFORE_SLASH_RE","source","ownerName","sourceInfo","path","fileName","replace","test","match","pathBeforeSlash","folderName","lineNumber","Resolved","refineResolvedLazyComponent","lazyComponent","_status","_result","getWrappedName","outerType","innerType","wrapperName","functionName","displayName","tag","render","thenable","resolvedThenable","loggedTypeFailures","setCurrentlyValidatingElement","element","checkPropTypes","typeSpecs","values","location","componentName","has","bind","Object","hasOwnProperty","typeSpecName","error$1","err","Error","ex","message","ReactCurrentOwner","RESERVED_PROPS","key","ref","__self","__source","specialPropKeyWarningShown","specialPropRefWarningShown","didWarnAboutStringRefs","hasValidRef","config","getter","getOwnPropertyDescriptor","get","isReactWarning","undefined","hasValidKey","warnIfStringRefCannotBeAutoConverted","self","current","stateNode","defineKeyPropWarningGetter","props","warnAboutAccessingKey","defineProperty","configurable","defineRefPropWarningGetter","warnAboutAccessingRef","ReactElement","_store","enumerable","writable","value","freeze","jsxDEV","maybeKey","propName","defaultProps","ReactCurrentOwner$1","ReactDebugCurrentFrame$1","setCurrentlyValidatingElement$1","propTypesMisspellWarningShown","isValidElement","object","getDeclarationErrorAddendum","getSourceInfoErrorAddendum","ownerHasKeyUseWarning","getCurrentComponentErrorInfo","parentType","info","parentName","validateExplicitKey","validated","currentComponentErrorInfo","childOwner","validateChildKeys","node","isArray","i","child","iteratorFn","entries","step","next","done","validatePropTypes","propTypes","PropTypes","_name","getDefaultProps","isReactClassApproved","validateFragmentProps","fragment","keys","jsxWithValidation","isStaticChildren","validType","typeString","children","jsxDEV$1"],"mappings":"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","sourcesContent":["/** @license React v16.14.0\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar React = require('react');\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar REACT_ELEMENT_TYPE = 0xeac7;\nvar REACT_PORTAL_TYPE = 0xeaca;\nexports.Fragment = 0xeacb;\nvar REACT_STRICT_MODE_TYPE = 0xeacc;\nvar REACT_PROFILER_TYPE = 0xead2;\nvar REACT_PROVIDER_TYPE = 0xeacd;\nvar REACT_CONTEXT_TYPE = 0xeace;\nvar REACT_FORWARD_REF_TYPE = 0xead0;\nvar REACT_SUSPENSE_TYPE = 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = 0xead8;\nvar REACT_MEMO_TYPE = 0xead3;\nvar REACT_LAZY_TYPE = 0xead4;\nvar REACT_BLOCK_TYPE = 0xead9;\nvar REACT_SERVER_BLOCK_TYPE = 0xeada;\nvar REACT_FUNDAMENTAL_TYPE = 0xead5;\nvar REACT_SCOPE_TYPE = 0xead7;\nvar REACT_OPAQUE_ID_TYPE = 0xeae0;\nvar REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;\nvar REACT_OFFSCREEN_TYPE = 0xeae2;\nvar REACT_LEGACY_HIDDEN_TYPE = 0xeae3;\n\nif (typeof Symbol === 'function' && Symbol.for) {\n  var symbolFor = Symbol.for;\n  REACT_ELEMENT_TYPE = symbolFor('react.element');\n  REACT_PORTAL_TYPE = symbolFor('react.portal');\n  exports.Fragment = symbolFor('react.fragment');\n  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');\n  REACT_PROFILER_TYPE = symbolFor('react.profiler');\n  REACT_PROVIDER_TYPE = symbolFor('react.provider');\n  REACT_CONTEXT_TYPE = symbolFor('react.context');\n  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');\n  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');\n  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');\n  REACT_MEMO_TYPE = symbolFor('react.memo');\n  REACT_LAZY_TYPE = symbolFor('react.lazy');\n  REACT_BLOCK_TYPE = symbolFor('react.block');\n  REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');\n  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');\n  REACT_SCOPE_TYPE = symbolFor('react.scope');\n  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');\n  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');\n  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');\n  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');\n}\n\nvar MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    printWarning('error', format, args);\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = '';\n\n    if (currentlyValidatingElement) {\n      var name = getComponentName(currentlyValidatingElement.type);\n      var owner = currentlyValidatingElement._owner;\n      stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner.type));\n    }\n\n    stack += ReactDebugCurrentFrame.getStackAddendum();\n\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    }\n\n    var argsWithFormat = args.map(function (item) {\n      return '' + item;\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// Filter certain DOM attributes (e.g. src, href) if their values are empty strings.\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === exports.Fragment || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {\n      return true;\n    }\n  }\n\n  return false;\n}\nvar BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\nfunction describeComponentFrame (name, source, ownerName) {\n  var sourceInfo = '';\n\n  if (source) {\n    var path = source.fileName;\n    var fileName = path.replace(BEFORE_SLASH_RE, '');\n\n    {\n      // In DEV, include code for a common special case:\n      // prefer \"folder/index.js\" instead of just \"index.js\".\n      if (/^index\\./.test(fileName)) {\n        var match = path.match(BEFORE_SLASH_RE);\n\n        if (match) {\n          var pathBeforeSlash = match[1];\n\n          if (pathBeforeSlash) {\n            var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\n            fileName = folderName + '/' + fileName;\n          }\n        }\n      }\n    }\n\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\n  } else if (ownerName) {\n    sourceInfo = ' (created by ' + ownerName + ')';\n  }\n\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\n}\n\nvar Resolved = 1;\nfunction refineResolvedLazyComponent(lazyComponent) {\n  return lazyComponent._status === Resolved ? lazyComponent._result : null;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var functionName = innerType.displayName || innerType.name || '';\n  return outerType.displayName || (functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName);\n}\n\nfunction getComponentName(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case exports.Fragment:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return \"Profiler\";\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        return 'Context.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        return 'Context.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        return getComponentName(type.type);\n\n      case REACT_BLOCK_TYPE:\n        return getComponentName(type.render);\n\n      case REACT_LAZY_TYPE:\n        {\n          var thenable = type;\n          var resolvedThenable = refineResolvedLazyComponent(thenable);\n\n          if (resolvedThenable) {\n            return getComponentName(resolvedThenable);\n          }\n\n          break;\n        }\n    }\n  }\n\n  return null;\n}\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar currentlyValidatingElement = null;\n\nfunction setCurrentlyValidatingElement(element) {\n  currentlyValidatingElement = element;\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentName(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentName(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  currentlyValidatingElement = element;\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentName(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentName(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (Array.isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentName(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentName(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (Array.isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentName(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (Array.isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === exports.Fragment) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV$1 =  jsxWithValidation ;\n\nexports.jsxDEV = jsxDEV$1;\n  })();\n}\n"]},"metadata":{},"sourceType":"script"}
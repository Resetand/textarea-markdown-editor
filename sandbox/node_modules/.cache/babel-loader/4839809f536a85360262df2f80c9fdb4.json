{"ast":null,"code":"// Trigger React's synthetic change events on input, textarea and select elements\n// https://github.com/facebook/react/pull/4051 - React 15 fix\n// https://github.com/facebook/react/pull/5746 - React 16 fix\n'use strict'; // Constants and functions are declared inside the closure.\n// In this way, reactTriggerChange can be passed directly to executeScript in Selenium.\n\nmodule.exports = function reactTriggerChange(node) {\n  var supportedInputTypes = {\n    color: true,\n    date: true,\n    datetime: true,\n    'datetime-local': true,\n    email: true,\n    month: true,\n    number: true,\n    password: true,\n    range: true,\n    search: true,\n    tel: true,\n    text: true,\n    time: true,\n    url: true,\n    week: true\n  };\n  var nodeName = node.nodeName.toLowerCase();\n  var type = node.type;\n  var event;\n  var descriptor;\n  var initialValue;\n  var initialChecked;\n  var initialCheckedRadio; // Do not try to delete non-configurable properties.\n  // Value and checked properties on DOM elements are non-configurable in PhantomJS.\n\n  function deletePropertySafe(elem, prop) {\n    var desc = Object.getOwnPropertyDescriptor(elem, prop);\n\n    if (desc && desc.configurable) {\n      delete elem[prop];\n    }\n  } // In IE10 propertychange is not dispatched on range input if invalid\n  // value is set.\n\n\n  function changeRangeValue(range) {\n    var initMin = range.min;\n    var initMax = range.max;\n    var initStep = range.step;\n    var initVal = Number(range.value);\n    range.min = initVal;\n    range.max = initVal + 1;\n    range.step = 1;\n    range.value = initVal + 1;\n    deletePropertySafe(range, 'value');\n    range.min = initMin;\n    range.max = initMax;\n    range.step = initStep;\n    range.value = initVal;\n  }\n\n  function getCheckedRadio(radio) {\n    var name = radio.name;\n    var radios;\n    var i;\n\n    if (name) {\n      radios = document.querySelectorAll('input[type=\"radio\"][name=\"' + name + '\"]');\n\n      for (i = 0; i < radios.length; i += 1) {\n        if (radios[i].checked) {\n          return radios[i] !== radio ? radios[i] : null;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  function preventChecking(e) {\n    e.preventDefault();\n\n    if (!initialChecked) {\n      e.target.checked = false;\n    }\n\n    if (initialCheckedRadio) {\n      initialCheckedRadio.checked = true;\n    }\n  }\n\n  if (nodeName === 'select' || nodeName === 'input' && type === 'file') {\n    // IE9-IE11, non-IE\n    // Dispatch change.\n    event = document.createEvent('HTMLEvents');\n    event.initEvent('change', true, false);\n    node.dispatchEvent(event);\n  } else if (nodeName === 'input' && supportedInputTypes[type] || nodeName === 'textarea') {\n    // React 16\n    // Cache artificial value property descriptor.\n    // Property doesn't exist in React <16, descriptor is undefined.\n    descriptor = Object.getOwnPropertyDescriptor(node, 'value'); // React 0.14: IE9\n    // React 15: IE9-IE11\n    // React 16: IE9\n    // Dispatch focus.\n\n    event = document.createEvent('UIEvents');\n    event.initEvent('focus', false, false);\n    node.dispatchEvent(event); // React 0.14: IE9\n    // React 15: IE9-IE11\n    // React 16\n    // In IE9-10 imperative change of node value triggers propertychange event.\n    // Update inputValueTracking cached value.\n    // Remove artificial value property.\n    // Restore initial value to trigger event with it.\n\n    if (type === 'range') {\n      changeRangeValue(node);\n    } else {\n      initialValue = node.value;\n      node.value = initialValue + '#';\n      deletePropertySafe(node, 'value');\n      node.value = initialValue;\n    } // React 15: IE11\n    // For unknown reason React 15 added listener for propertychange with addEventListener.\n    // This doesn't work, propertychange events are deprecated in IE11,\n    // but allows us to dispatch fake propertychange which is handled by IE11.\n\n\n    event = document.createEvent('HTMLEvents');\n    event.initEvent('propertychange', false, false);\n    event.propertyName = 'value';\n    node.dispatchEvent(event); // React 0.14: IE10-IE11, non-IE\n    // React 15: non-IE\n    // React 16: IE10-IE11, non-IE\n\n    event = document.createEvent('HTMLEvents');\n    event.initEvent('input', true, false);\n    node.dispatchEvent(event); // React 16\n    // Restore artificial value property descriptor.\n\n    if (descriptor) {\n      Object.defineProperty(node, 'value', descriptor);\n    }\n  } else if (nodeName === 'input' && type === 'checkbox') {\n    // Invert inputValueTracking cached value.\n    node.checked = !node.checked; // Dispatch click.\n    // Click event inverts checked value.\n\n    event = document.createEvent('MouseEvents');\n    event.initEvent('click', true, true);\n    node.dispatchEvent(event);\n  } else if (nodeName === 'input' && type === 'radio') {\n    // Cache initial checked value.\n    initialChecked = node.checked; // Find and cache initially checked radio in the group.\n\n    initialCheckedRadio = getCheckedRadio(node); // React 16\n    // Cache property descriptor.\n    // Invert inputValueTracking cached value.\n    // Remove artificial checked property.\n    // Restore initial value, otherwise preventDefault will eventually revert the value.\n\n    descriptor = Object.getOwnPropertyDescriptor(node, 'checked');\n    node.checked = !initialChecked;\n    deletePropertySafe(node, 'checked');\n    node.checked = initialChecked; // Prevent toggling during event capturing phase.\n    // Set checked value to false if initialChecked is false,\n    // otherwise next listeners will see true.\n    // Restore initially checked radio in the group.\n\n    node.addEventListener('click', preventChecking, true); // Dispatch click.\n    // Click event inverts checked value.\n\n    event = document.createEvent('MouseEvents');\n    event.initEvent('click', true, true);\n    node.dispatchEvent(event); // Remove listener to stop further change prevention.\n\n    node.removeEventListener('click', preventChecking, true); // React 16\n    // Restore artificial checked property descriptor.\n\n    if (descriptor) {\n      Object.defineProperty(node, 'checked', descriptor);\n    }\n  }\n};","map":{"version":3,"sources":["/Users/kamachekhin/code/markdown-textarea/node_modules/react-trigger-change/lib/change.js"],"names":["module","exports","reactTriggerChange","node","supportedInputTypes","color","date","datetime","email","month","number","password","range","search","tel","text","time","url","week","nodeName","toLowerCase","type","event","descriptor","initialValue","initialChecked","initialCheckedRadio","deletePropertySafe","elem","prop","desc","Object","getOwnPropertyDescriptor","configurable","changeRangeValue","initMin","min","initMax","max","initStep","step","initVal","Number","value","getCheckedRadio","radio","name","radios","i","document","querySelectorAll","length","checked","preventChecking","e","preventDefault","target","createEvent","initEvent","dispatchEvent","propertyName","defineProperty","addEventListener","removeEventListener"],"mappings":"AAAA;AACA;AACA;AAEA,a,CAEA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiB,SAASC,kBAAT,CAA4BC,IAA5B,EAAkC;AACjD,MAAIC,mBAAmB,GAAG;AACxBC,IAAAA,KAAK,EAAE,IADiB;AAExBC,IAAAA,IAAI,EAAE,IAFkB;AAGxBC,IAAAA,QAAQ,EAAE,IAHc;AAIxB,sBAAkB,IAJM;AAKxBC,IAAAA,KAAK,EAAE,IALiB;AAMxBC,IAAAA,KAAK,EAAE,IANiB;AAOxBC,IAAAA,MAAM,EAAE,IAPgB;AAQxBC,IAAAA,QAAQ,EAAE,IARc;AASxBC,IAAAA,KAAK,EAAE,IATiB;AAUxBC,IAAAA,MAAM,EAAE,IAVgB;AAWxBC,IAAAA,GAAG,EAAE,IAXmB;AAYxBC,IAAAA,IAAI,EAAE,IAZkB;AAaxBC,IAAAA,IAAI,EAAE,IAbkB;AAcxBC,IAAAA,GAAG,EAAE,IAdmB;AAexBC,IAAAA,IAAI,EAAE;AAfkB,GAA1B;AAiBA,MAAIC,QAAQ,GAAGhB,IAAI,CAACgB,QAAL,CAAcC,WAAd,EAAf;AACA,MAAIC,IAAI,GAAGlB,IAAI,CAACkB,IAAhB;AACA,MAAIC,KAAJ;AACA,MAAIC,UAAJ;AACA,MAAIC,YAAJ;AACA,MAAIC,cAAJ;AACA,MAAIC,mBAAJ,CAxBiD,CA0BjD;AACA;;AACA,WAASC,kBAAT,CAA4BC,IAA5B,EAAkCC,IAAlC,EAAwC;AACtC,QAAIC,IAAI,GAAGC,MAAM,CAACC,wBAAP,CAAgCJ,IAAhC,EAAsCC,IAAtC,CAAX;;AACA,QAAIC,IAAI,IAAIA,IAAI,CAACG,YAAjB,EAA+B;AAC7B,aAAOL,IAAI,CAACC,IAAD,CAAX;AACD;AACF,GAjCgD,CAmCjD;AACA;;;AACA,WAASK,gBAAT,CAA0BtB,KAA1B,EAAiC;AAC/B,QAAIuB,OAAO,GAAGvB,KAAK,CAACwB,GAApB;AACA,QAAIC,OAAO,GAAGzB,KAAK,CAAC0B,GAApB;AACA,QAAIC,QAAQ,GAAG3B,KAAK,CAAC4B,IAArB;AACA,QAAIC,OAAO,GAAGC,MAAM,CAAC9B,KAAK,CAAC+B,KAAP,CAApB;AAEA/B,IAAAA,KAAK,CAACwB,GAAN,GAAYK,OAAZ;AACA7B,IAAAA,KAAK,CAAC0B,GAAN,GAAYG,OAAO,GAAG,CAAtB;AACA7B,IAAAA,KAAK,CAAC4B,IAAN,GAAa,CAAb;AACA5B,IAAAA,KAAK,CAAC+B,KAAN,GAAcF,OAAO,GAAG,CAAxB;AACAd,IAAAA,kBAAkB,CAACf,KAAD,EAAQ,OAAR,CAAlB;AACAA,IAAAA,KAAK,CAACwB,GAAN,GAAYD,OAAZ;AACAvB,IAAAA,KAAK,CAAC0B,GAAN,GAAYD,OAAZ;AACAzB,IAAAA,KAAK,CAAC4B,IAAN,GAAaD,QAAb;AACA3B,IAAAA,KAAK,CAAC+B,KAAN,GAAcF,OAAd;AACD;;AAED,WAASG,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,QAAIC,IAAI,GAAGD,KAAK,CAACC,IAAjB;AACA,QAAIC,MAAJ;AACA,QAAIC,CAAJ;;AACA,QAAIF,IAAJ,EAAU;AACRC,MAAAA,MAAM,GAAGE,QAAQ,CAACC,gBAAT,CAA0B,+BAA+BJ,IAA/B,GAAsC,IAAhE,CAAT;;AACA,WAAKE,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGD,MAAM,CAACI,MAAvB,EAA+BH,CAAC,IAAI,CAApC,EAAuC;AACrC,YAAID,MAAM,CAACC,CAAD,CAAN,CAAUI,OAAd,EAAuB;AACrB,iBAAOL,MAAM,CAACC,CAAD,CAAN,KAAcH,KAAd,GAAsBE,MAAM,CAACC,CAAD,CAA5B,GAAkC,IAAzC;AACD;AACF;AACF;;AACD,WAAO,IAAP;AACD;;AAED,WAASK,eAAT,CAAyBC,CAAzB,EAA4B;AAC1BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI,CAAC9B,cAAL,EAAqB;AACnB6B,MAAAA,CAAC,CAACE,MAAF,CAASJ,OAAT,GAAmB,KAAnB;AACD;;AACD,QAAI1B,mBAAJ,EAAyB;AACvBA,MAAAA,mBAAmB,CAAC0B,OAApB,GAA8B,IAA9B;AACD;AACF;;AAED,MAAIjC,QAAQ,KAAK,QAAb,IACDA,QAAQ,KAAK,OAAb,IAAwBE,IAAI,KAAK,MADpC,EAC6C;AAC3C;AACA;AACAC,IAAAA,KAAK,GAAG2B,QAAQ,CAACQ,WAAT,CAAqB,YAArB,CAAR;AACAnC,IAAAA,KAAK,CAACoC,SAAN,CAAgB,QAAhB,EAA0B,IAA1B,EAAgC,KAAhC;AACAvD,IAAAA,IAAI,CAACwD,aAAL,CAAmBrC,KAAnB;AACD,GAPD,MAOO,IAAKH,QAAQ,KAAK,OAAb,IAAwBf,mBAAmB,CAACiB,IAAD,CAA5C,IACTF,QAAQ,KAAK,UADR,EACoB;AACzB;AACA;AACA;AACAI,IAAAA,UAAU,GAAGQ,MAAM,CAACC,wBAAP,CAAgC7B,IAAhC,EAAsC,OAAtC,CAAb,CAJyB,CAMzB;AACA;AACA;AACA;;AACAmB,IAAAA,KAAK,GAAG2B,QAAQ,CAACQ,WAAT,CAAqB,UAArB,CAAR;AACAnC,IAAAA,KAAK,CAACoC,SAAN,CAAgB,OAAhB,EAAyB,KAAzB,EAAgC,KAAhC;AACAvD,IAAAA,IAAI,CAACwD,aAAL,CAAmBrC,KAAnB,EAZyB,CAczB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAID,IAAI,KAAK,OAAb,EAAsB;AACpBa,MAAAA,gBAAgB,CAAC/B,IAAD,CAAhB;AACD,KAFD,MAEO;AACLqB,MAAAA,YAAY,GAAGrB,IAAI,CAACwC,KAApB;AACAxC,MAAAA,IAAI,CAACwC,KAAL,GAAanB,YAAY,GAAG,GAA5B;AACAG,MAAAA,kBAAkB,CAACxB,IAAD,EAAO,OAAP,CAAlB;AACAA,MAAAA,IAAI,CAACwC,KAAL,GAAanB,YAAb;AACD,KA5BwB,CA8BzB;AACA;AACA;AACA;;;AACAF,IAAAA,KAAK,GAAG2B,QAAQ,CAACQ,WAAT,CAAqB,YAArB,CAAR;AACAnC,IAAAA,KAAK,CAACoC,SAAN,CAAgB,gBAAhB,EAAkC,KAAlC,EAAyC,KAAzC;AACApC,IAAAA,KAAK,CAACsC,YAAN,GAAqB,OAArB;AACAzD,IAAAA,IAAI,CAACwD,aAAL,CAAmBrC,KAAnB,EArCyB,CAuCzB;AACA;AACA;;AACAA,IAAAA,KAAK,GAAG2B,QAAQ,CAACQ,WAAT,CAAqB,YAArB,CAAR;AACAnC,IAAAA,KAAK,CAACoC,SAAN,CAAgB,OAAhB,EAAyB,IAAzB,EAA+B,KAA/B;AACAvD,IAAAA,IAAI,CAACwD,aAAL,CAAmBrC,KAAnB,EA5CyB,CA8CzB;AACA;;AACA,QAAIC,UAAJ,EAAgB;AACdQ,MAAAA,MAAM,CAAC8B,cAAP,CAAsB1D,IAAtB,EAA4B,OAA5B,EAAqCoB,UAArC;AACD;AACF,GApDM,MAoDA,IAAIJ,QAAQ,KAAK,OAAb,IAAwBE,IAAI,KAAK,UAArC,EAAiD;AACtD;AACAlB,IAAAA,IAAI,CAACiD,OAAL,GAAe,CAACjD,IAAI,CAACiD,OAArB,CAFsD,CAItD;AACA;;AACA9B,IAAAA,KAAK,GAAG2B,QAAQ,CAACQ,WAAT,CAAqB,aAArB,CAAR;AACAnC,IAAAA,KAAK,CAACoC,SAAN,CAAgB,OAAhB,EAAyB,IAAzB,EAA+B,IAA/B;AACAvD,IAAAA,IAAI,CAACwD,aAAL,CAAmBrC,KAAnB;AACD,GATM,MASA,IAAIH,QAAQ,KAAK,OAAb,IAAwBE,IAAI,KAAK,OAArC,EAA8C;AACnD;AACAI,IAAAA,cAAc,GAAGtB,IAAI,CAACiD,OAAtB,CAFmD,CAInD;;AACA1B,IAAAA,mBAAmB,GAAGkB,eAAe,CAACzC,IAAD,CAArC,CALmD,CAOnD;AACA;AACA;AACA;AACA;;AACAoB,IAAAA,UAAU,GAAGQ,MAAM,CAACC,wBAAP,CAAgC7B,IAAhC,EAAsC,SAAtC,CAAb;AACAA,IAAAA,IAAI,CAACiD,OAAL,GAAe,CAAC3B,cAAhB;AACAE,IAAAA,kBAAkB,CAACxB,IAAD,EAAO,SAAP,CAAlB;AACAA,IAAAA,IAAI,CAACiD,OAAL,GAAe3B,cAAf,CAfmD,CAiBnD;AACA;AACA;AACA;;AACAtB,IAAAA,IAAI,CAAC2D,gBAAL,CAAsB,OAAtB,EAA+BT,eAA/B,EAAgD,IAAhD,EArBmD,CAuBnD;AACA;;AACA/B,IAAAA,KAAK,GAAG2B,QAAQ,CAACQ,WAAT,CAAqB,aAArB,CAAR;AACAnC,IAAAA,KAAK,CAACoC,SAAN,CAAgB,OAAhB,EAAyB,IAAzB,EAA+B,IAA/B;AACAvD,IAAAA,IAAI,CAACwD,aAAL,CAAmBrC,KAAnB,EA3BmD,CA6BnD;;AACAnB,IAAAA,IAAI,CAAC4D,mBAAL,CAAyB,OAAzB,EAAkCV,eAAlC,EAAmD,IAAnD,EA9BmD,CAgCnD;AACA;;AACA,QAAI9B,UAAJ,EAAgB;AACdQ,MAAAA,MAAM,CAAC8B,cAAP,CAAsB1D,IAAtB,EAA4B,SAA5B,EAAuCoB,UAAvC;AACD;AACF;AACF,CAzLD","sourcesContent":["// Trigger React's synthetic change events on input, textarea and select elements\n// https://github.com/facebook/react/pull/4051 - React 15 fix\n// https://github.com/facebook/react/pull/5746 - React 16 fix\n\n'use strict';\n\n// Constants and functions are declared inside the closure.\n// In this way, reactTriggerChange can be passed directly to executeScript in Selenium.\nmodule.exports = function reactTriggerChange(node) {\n  var supportedInputTypes = {\n    color: true,\n    date: true,\n    datetime: true,\n    'datetime-local': true,\n    email: true,\n    month: true,\n    number: true,\n    password: true,\n    range: true,\n    search: true,\n    tel: true,\n    text: true,\n    time: true,\n    url: true,\n    week: true\n  };\n  var nodeName = node.nodeName.toLowerCase();\n  var type = node.type;\n  var event;\n  var descriptor;\n  var initialValue;\n  var initialChecked;\n  var initialCheckedRadio;\n\n  // Do not try to delete non-configurable properties.\n  // Value and checked properties on DOM elements are non-configurable in PhantomJS.\n  function deletePropertySafe(elem, prop) {\n    var desc = Object.getOwnPropertyDescriptor(elem, prop);\n    if (desc && desc.configurable) {\n      delete elem[prop];\n    }\n  }\n\n  // In IE10 propertychange is not dispatched on range input if invalid\n  // value is set.\n  function changeRangeValue(range) {\n    var initMin = range.min;\n    var initMax = range.max;\n    var initStep = range.step;\n    var initVal = Number(range.value);\n\n    range.min = initVal;\n    range.max = initVal + 1;\n    range.step = 1;\n    range.value = initVal + 1;\n    deletePropertySafe(range, 'value');\n    range.min = initMin;\n    range.max = initMax;\n    range.step = initStep;\n    range.value = initVal;\n  }\n\n  function getCheckedRadio(radio) {\n    var name = radio.name;\n    var radios;\n    var i;\n    if (name) {\n      radios = document.querySelectorAll('input[type=\"radio\"][name=\"' + name + '\"]');\n      for (i = 0; i < radios.length; i += 1) {\n        if (radios[i].checked) {\n          return radios[i] !== radio ? radios[i] : null;\n        }\n      }\n    }\n    return null;\n  }\n\n  function preventChecking(e) {\n    e.preventDefault();\n    if (!initialChecked) {\n      e.target.checked = false;\n    }\n    if (initialCheckedRadio) {\n      initialCheckedRadio.checked = true;\n    }\n  }\n\n  if (nodeName === 'select' ||\n    (nodeName === 'input' && type === 'file')) {\n    // IE9-IE11, non-IE\n    // Dispatch change.\n    event = document.createEvent('HTMLEvents');\n    event.initEvent('change', true, false);\n    node.dispatchEvent(event);\n  } else if ((nodeName === 'input' && supportedInputTypes[type]) ||\n    nodeName === 'textarea') {\n    // React 16\n    // Cache artificial value property descriptor.\n    // Property doesn't exist in React <16, descriptor is undefined.\n    descriptor = Object.getOwnPropertyDescriptor(node, 'value');\n\n    // React 0.14: IE9\n    // React 15: IE9-IE11\n    // React 16: IE9\n    // Dispatch focus.\n    event = document.createEvent('UIEvents');\n    event.initEvent('focus', false, false);\n    node.dispatchEvent(event);\n\n    // React 0.14: IE9\n    // React 15: IE9-IE11\n    // React 16\n    // In IE9-10 imperative change of node value triggers propertychange event.\n    // Update inputValueTracking cached value.\n    // Remove artificial value property.\n    // Restore initial value to trigger event with it.\n    if (type === 'range') {\n      changeRangeValue(node);\n    } else {\n      initialValue = node.value;\n      node.value = initialValue + '#';\n      deletePropertySafe(node, 'value');\n      node.value = initialValue;\n    }\n\n    // React 15: IE11\n    // For unknown reason React 15 added listener for propertychange with addEventListener.\n    // This doesn't work, propertychange events are deprecated in IE11,\n    // but allows us to dispatch fake propertychange which is handled by IE11.\n    event = document.createEvent('HTMLEvents');\n    event.initEvent('propertychange', false, false);\n    event.propertyName = 'value';\n    node.dispatchEvent(event);\n\n    // React 0.14: IE10-IE11, non-IE\n    // React 15: non-IE\n    // React 16: IE10-IE11, non-IE\n    event = document.createEvent('HTMLEvents');\n    event.initEvent('input', true, false);\n    node.dispatchEvent(event);\n\n    // React 16\n    // Restore artificial value property descriptor.\n    if (descriptor) {\n      Object.defineProperty(node, 'value', descriptor);\n    }\n  } else if (nodeName === 'input' && type === 'checkbox') {\n    // Invert inputValueTracking cached value.\n    node.checked = !node.checked;\n\n    // Dispatch click.\n    // Click event inverts checked value.\n    event = document.createEvent('MouseEvents');\n    event.initEvent('click', true, true);\n    node.dispatchEvent(event);\n  } else if (nodeName === 'input' && type === 'radio') {\n    // Cache initial checked value.\n    initialChecked = node.checked;\n\n    // Find and cache initially checked radio in the group.\n    initialCheckedRadio = getCheckedRadio(node);\n\n    // React 16\n    // Cache property descriptor.\n    // Invert inputValueTracking cached value.\n    // Remove artificial checked property.\n    // Restore initial value, otherwise preventDefault will eventually revert the value.\n    descriptor = Object.getOwnPropertyDescriptor(node, 'checked');\n    node.checked = !initialChecked;\n    deletePropertySafe(node, 'checked');\n    node.checked = initialChecked;\n\n    // Prevent toggling during event capturing phase.\n    // Set checked value to false if initialChecked is false,\n    // otherwise next listeners will see true.\n    // Restore initially checked radio in the group.\n    node.addEventListener('click', preventChecking, true);\n\n    // Dispatch click.\n    // Click event inverts checked value.\n    event = document.createEvent('MouseEvents');\n    event.initEvent('click', true, true);\n    node.dispatchEvent(event);\n\n    // Remove listener to stop further change prevention.\n    node.removeEventListener('click', preventChecking, true);\n\n    // React 16\n    // Restore artificial checked property descriptor.\n    if (descriptor) {\n      Object.defineProperty(node, 'checked', descriptor);\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"script"}
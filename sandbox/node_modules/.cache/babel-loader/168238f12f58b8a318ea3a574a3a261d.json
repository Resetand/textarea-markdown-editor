{"ast":null,"code":"var _jsxFileName = \"/Users/kamachekhin/code/markdown-textarea/sandbox/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport MarkdownTextarea from \"textarea-markdown-editor\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  const ref = useRef(null);\n  return /*#__PURE__*/_jsxDEV(MarkdownTextarea.Wrapper, {\n    ref: ref,\n    children: /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n      value: value,\n      onChange: e => setValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"6TC6TBI+8qoVL2vhsZjbxnzgk2s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kamachekhin/code/markdown-textarea/sandbox/src/App.tsx"],"names":["React","useRef","useState","MarkdownTextarea","TextareaAutosize","App","value","setValue","ref","e","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,gBAAP,MAAsD,0BAAtD;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMM,GAAG,GAAGP,MAAM,CAAsB,IAAtB,CAAlB;AAEA,sBACI,QAAC,gBAAD,CAAkB,OAAlB;AAA0B,IAAA,GAAG,EAAEO,GAA/B;AAAA,2BACI,QAAC,gBAAD;AAAkB,MAAA,KAAK,EAAEF,KAAzB;AAAgC,MAAA,QAAQ,EAAGG,CAAD,IAAOF,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV;AAAzD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GATQD,G;;KAAAA,G;AAUT,eAAeA,GAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport MarkdownTextarea, { MarkdownTextareaRef } from \"textarea-markdown-editor\";\nimport TextareaAutosize from \"react-textarea-autosize\";\n\nfunction App() {\n    const [value, setValue] = useState(\"\");\n    const ref = useRef<MarkdownTextareaRef>(null);\n\n    return (\n        <MarkdownTextarea.Wrapper ref={ref}>\n            <TextareaAutosize value={value} onChange={(e) => setValue(e.target.value)} />\n        </MarkdownTextarea.Wrapper>\n    );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nimport { clamp } from \"./utils\";\n\nvar reactTriggerChange = require(\"react-trigger-change\");\n\nvar selectionSymbol = Symbol(\"selection position\");\n\nvar rawParser = function (strings) {\n  var tags = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    tags[_i - 1] = arguments[_i];\n  }\n\n  var hash = String(Date.now());\n  var rawStrings = strings.map(function (c, index) {\n    var isSelection = tags[index] === selectionSymbol;\n    return c + (isSelection ? hash : typeof tags[index] === \"string\" ? String(tags[index]) : \"\");\n  });\n  var prepared = rawStrings.join(\"\");\n  var parts = prepared.split(hash);\n  var content = parts.join(\"\");\n  var selectionsTag = tags.filter(function (x) {\n    return x === selectionSymbol;\n  });\n  var selections = parts.reduce(function (_a, text, index) {\n    var config = _a[0],\n        totalLength = _a[1];\n    var selection = selectionsTag[index];\n\n    if (selection === selectionSymbol) {\n      if (config.currentSelectionStart === undefined) {\n        config.currentSelectionStart = totalLength + text.length;\n      } else if (config.currentSelectionEnd === undefined) {\n        config.currentSelectionEnd = totalLength + text.length;\n      }\n    }\n\n    return [config, totalLength + text.length];\n  }, [{}, 0])[0];\n  return __assign({\n    content: content\n  }, selections);\n};\n/**\n * Service for manipulation with textarea content and text selection\n */\n\n\nvar Cursor =\n/** @class */\nfunction () {\n  function Cursor(element) {\n    var _this = this;\n\n    this.element = element;\n\n    this.getLine = function (lineNumber) {\n      var ensureLineNumber = lineNumber !== null && lineNumber !== void 0 ? lineNumber : _this.getCurrentPosition().lineNumber;\n\n      var lines = _this.element.value.split(\"\\n\");\n\n      var line = lines[ensureLineNumber];\n      return (line === null || line === void 0 ? void 0 : line.endsWith(\"\\n\")) ? line === null || line === void 0 ? void 0 : line.slice(0, -1) : line;\n    };\n\n    this.getIndentSize = function (lineNumber) {\n      var _a, _b;\n\n      return (_b = (_a = _this.getLine(lineNumber).match(/^\\s*/)) === null || _a === void 0 ? void 0 : _a[0].length) !== null && _b !== void 0 ? _b : 0;\n    };\n\n    this.getCurrentPosition = function () {\n      var getTextLines = function (tillPosition) {\n        return _this.element.value.slice(0, tillPosition).split(\"\\n\").map(function (x) {\n          return x + \"\\n\";\n        });\n      };\n\n      var clampByLine = function (value, lineNumber) {\n        return clamp(value, 0, _this.getLine(lineNumber).length);\n      };\n\n      var tillStartTextLines = getTextLines(_this.element.selectionStart);\n      var tillStartEndLines = getTextLines(_this.element.selectionEnd);\n      var lineNumber = tillStartTextLines.length - 1;\n      var lineNumberEnd = tillStartEndLines.length - 1;\n      var selectionSize = _this.element.selectionEnd - _this.element.selectionStart;\n      var lineSelectionStart = clampByLine(_this.element.selectionStart - tillStartTextLines.slice(0, -1).join(\"\").length, lineNumber);\n      var lineSelectionEnd = clampByLine(lineSelectionStart + selectionSize, lineNumber);\n      return {\n        lineNumber: lineNumber,\n        lineNumberEnd: lineNumberEnd,\n        lineSelectionEnd: lineSelectionEnd,\n        lineSelectionStart: lineSelectionStart,\n        selectionDirection: _this.element.selectionDirection,\n        selectionStart: _this.element.selectionStart,\n        selectionEnd: _this.element.selectionEnd\n      };\n    };\n\n    this.getValue = function () {\n      return _this.element.value;\n    };\n\n    this.setValue = function (value) {\n      if (document.activeElement !== _this.element) {\n        _this.element.focus();\n      }\n\n      _this.element.value = value;\n      reactTriggerChange(_this.element);\n    };\n\n    this.getSelected = function () {\n      var position = _this.getCurrentPosition();\n\n      return _this.getValue().slice(position.selectionStart, position.selectionEnd);\n    };\n\n    this.spliceContent = function (parsedRaw, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var text = _this.getValue();\n\n      var lines = text.split(\"\\n\");\n\n      var position = _this.getCurrentPosition();\n\n      var _a = options.replaceCount,\n          replaceCount = _a === void 0 ? 0 : _a,\n          _b = options.startLineNumber,\n          startLineNumber = _b === void 0 ? position.lineNumber : _b;\n\n      var _c = parsedRaw !== null && parsedRaw !== void 0 ? parsedRaw : {},\n          _d = _c.content,\n          content = _d === void 0 ? \"\" : _d,\n          _e = _c.currentSelectionStart,\n          currentSelectionStart = _e === void 0 ? 0 : _e,\n          currentSelectionEnd = _c.currentSelectionEnd;\n\n      var linesBefore = lines.slice(0, startLineNumber);\n      var linesAfter = lines.slice(startLineNumber + replaceCount);\n      var currentLines = content.split(\"\\n\");\n\n      var joined = __spreadArrays(linesBefore, currentLines, linesAfter).join(\"\\n\");\n\n      _this.setValue(joined);\n\n      var charsBeforeLength = linesBefore.map(function (x) {\n        return x.concat(\"\\n\");\n      }).join(\"\").length;\n      var selectionStart = currentSelectionStart + charsBeforeLength;\n      var selectionEnd = (currentSelectionEnd !== null && currentSelectionEnd !== void 0 ? currentSelectionEnd : currentSelectionStart) + charsBeforeLength;\n\n      _this.element.setSelectionRange(selectionStart, selectionEnd);\n    };\n\n    this.removeLines = function () {\n      var lineNumbers = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        lineNumbers[_i] = arguments[_i];\n      }\n\n      var text = _this.getValue();\n\n      var lines = text.split(\"\\n\").filter(function (_, index) {\n        return !lineNumbers.includes(index);\n      });\n\n      _this.setValue(lines.join(\"\\n\"));\n    };\n  }\n\n  Cursor.$ = selectionSymbol;\n  Cursor.raw = rawParser;\n  return Cursor;\n}();\n\nexport { Cursor };","map":{"version":3,"sources":["/Users/kamachekhin/code/markdown-textarea/dist/Cursor.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__spreadArrays","il","r","Array","k","a","j","jl","clamp","reactTriggerChange","require","selectionSymbol","Symbol","rawParser","strings","tags","_i","hash","String","Date","now","rawStrings","map","c","index","isSelection","prepared","join","parts","split","content","selectionsTag","filter","x","selections","reduce","_a","text","config","totalLength","selection","currentSelectionStart","undefined","currentSelectionEnd","Cursor","element","_this","getLine","lineNumber","ensureLineNumber","getCurrentPosition","lines","value","line","endsWith","slice","getIndentSize","_b","match","getTextLines","tillPosition","clampByLine","tillStartTextLines","selectionStart","tillStartEndLines","selectionEnd","lineNumberEnd","selectionSize","lineSelectionStart","lineSelectionEnd","selectionDirection","getValue","setValue","document","activeElement","focus","getSelected","position","spliceContent","parsedRaw","options","replaceCount","startLineNumber","_c","_d","_e","linesBefore","linesAfter","currentLines","joined","charsBeforeLength","concat","setSelectionRange","removeLines","lineNumbers","_","includes","$","raw"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { clamp } from \"./utils\";\nvar reactTriggerChange = require(\"react-trigger-change\");\nvar selectionSymbol = Symbol(\"selection position\");\nvar rawParser = function (strings) {\n    var tags = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        tags[_i - 1] = arguments[_i];\n    }\n    var hash = String(Date.now());\n    var rawStrings = strings.map(function (c, index) {\n        var isSelection = tags[index] === selectionSymbol;\n        return c + (isSelection ? hash : typeof tags[index] === \"string\" ? String(tags[index]) : \"\");\n    });\n    var prepared = rawStrings.join(\"\");\n    var parts = prepared.split(hash);\n    var content = parts.join(\"\");\n    var selectionsTag = tags.filter(function (x) { return x === selectionSymbol; });\n    var selections = parts.reduce(function (_a, text, index) {\n        var config = _a[0], totalLength = _a[1];\n        var selection = selectionsTag[index];\n        if (selection === selectionSymbol) {\n            if (config.currentSelectionStart === undefined) {\n                config.currentSelectionStart = totalLength + text.length;\n            }\n            else if (config.currentSelectionEnd === undefined) {\n                config.currentSelectionEnd = totalLength + text.length;\n            }\n        }\n        return [config, totalLength + text.length];\n    }, [{}, 0])[0];\n    return __assign({ content: content }, selections);\n};\n/**\n * Service for manipulation with textarea content and text selection\n */\nvar Cursor = /** @class */ (function () {\n    function Cursor(element) {\n        var _this = this;\n        this.element = element;\n        this.getLine = function (lineNumber) {\n            var ensureLineNumber = lineNumber !== null && lineNumber !== void 0 ? lineNumber : _this.getCurrentPosition().lineNumber;\n            var lines = _this.element.value.split(\"\\n\");\n            var line = lines[ensureLineNumber];\n            return (line === null || line === void 0 ? void 0 : line.endsWith(\"\\n\")) ? line === null || line === void 0 ? void 0 : line.slice(0, -1) : line;\n        };\n        this.getIndentSize = function (lineNumber) {\n            var _a, _b;\n            return (_b = (_a = _this.getLine(lineNumber).match(/^\\s*/)) === null || _a === void 0 ? void 0 : _a[0].length) !== null && _b !== void 0 ? _b : 0;\n        };\n        this.getCurrentPosition = function () {\n            var getTextLines = function (tillPosition) {\n                return _this.element.value\n                    .slice(0, tillPosition)\n                    .split(\"\\n\")\n                    .map(function (x) { return x + \"\\n\"; });\n            };\n            var clampByLine = function (value, lineNumber) { return clamp(value, 0, _this.getLine(lineNumber).length); };\n            var tillStartTextLines = getTextLines(_this.element.selectionStart);\n            var tillStartEndLines = getTextLines(_this.element.selectionEnd);\n            var lineNumber = tillStartTextLines.length - 1;\n            var lineNumberEnd = tillStartEndLines.length - 1;\n            var selectionSize = _this.element.selectionEnd - _this.element.selectionStart;\n            var lineSelectionStart = clampByLine(_this.element.selectionStart - tillStartTextLines.slice(0, -1).join(\"\").length, lineNumber);\n            var lineSelectionEnd = clampByLine(lineSelectionStart + selectionSize, lineNumber);\n            return {\n                lineNumber: lineNumber,\n                lineNumberEnd: lineNumberEnd,\n                lineSelectionEnd: lineSelectionEnd,\n                lineSelectionStart: lineSelectionStart,\n                selectionDirection: _this.element.selectionDirection,\n                selectionStart: _this.element.selectionStart,\n                selectionEnd: _this.element.selectionEnd,\n            };\n        };\n        this.getValue = function () { return _this.element.value; };\n        this.setValue = function (value) {\n            if (document.activeElement !== _this.element) {\n                _this.element.focus();\n            }\n            _this.element.value = value;\n            reactTriggerChange(_this.element);\n        };\n        this.getSelected = function () {\n            var position = _this.getCurrentPosition();\n            return _this.getValue().slice(position.selectionStart, position.selectionEnd);\n        };\n        this.spliceContent = function (parsedRaw, options) {\n            if (options === void 0) { options = {}; }\n            var text = _this.getValue();\n            var lines = text.split(\"\\n\");\n            var position = _this.getCurrentPosition();\n            var _a = options.replaceCount, replaceCount = _a === void 0 ? 0 : _a, _b = options.startLineNumber, startLineNumber = _b === void 0 ? position.lineNumber : _b;\n            var _c = parsedRaw !== null && parsedRaw !== void 0 ? parsedRaw : {}, _d = _c.content, content = _d === void 0 ? \"\" : _d, _e = _c.currentSelectionStart, currentSelectionStart = _e === void 0 ? 0 : _e, currentSelectionEnd = _c.currentSelectionEnd;\n            var linesBefore = lines.slice(0, startLineNumber);\n            var linesAfter = lines.slice(startLineNumber + replaceCount);\n            var currentLines = content.split(\"\\n\");\n            var joined = __spreadArrays(linesBefore, currentLines, linesAfter).join(\"\\n\");\n            _this.setValue(joined);\n            var charsBeforeLength = linesBefore.map(function (x) { return x.concat(\"\\n\"); }).join(\"\").length;\n            var selectionStart = currentSelectionStart + charsBeforeLength;\n            var selectionEnd = (currentSelectionEnd !== null && currentSelectionEnd !== void 0 ? currentSelectionEnd : currentSelectionStart) + charsBeforeLength;\n            _this.element.setSelectionRange(selectionStart, selectionEnd);\n        };\n        this.removeLines = function () {\n            var lineNumbers = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                lineNumbers[_i] = arguments[_i];\n            }\n            var text = _this.getValue();\n            var lines = text.split(\"\\n\").filter(function (_, index) { return !lineNumbers.includes(index); });\n            _this.setValue(lines.join(\"\\n\"));\n        };\n    }\n    Cursor.$ = selectionSymbol;\n    Cursor.raw = rawParser;\n    return Cursor;\n}());\nexport { Cursor };\n"]},"metadata":{},"sourceType":"module"}